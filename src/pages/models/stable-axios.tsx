import axios from 'axios';
import Head from 'next/head';
import Image from 'next/image';
import React, { useState } from 'react'
import Skeleton from 'react-loading-skeleton';
import { toast, ToastContainer } from 'react-toastify';

type Props = {}

const StableAxios = (props: Props) => {

  const [name, setName] = useState("");
  const [prompt, setPrompt] = useState("");
  const [image, setImage] = useState("");
  const [loading, setLoading] = useState(false);


  const info = () => toast.info("Generating image!");
  const success = () => toast.success("Image generated!");

    const toastCheck = (e: { preventDefault: () => void }) => {
      e.preventDefault();
      info();
      success();
    };

   const createImage = async () => {
     info();
     setLoading(true);
     // You can replace this with different model API's
     const URL = `https://api-inference.huggingface.co/models/stabilityai/stable-diffusion-2`;

     const response = await axios({
       url: URL,
       method: "POST",
       headers: {
         Authorization: `Bearer ${process.env.REACT_APP_HUGGING_FACE_API_KEY}`,
         Accept: "application/json",
         "Content-Type": "application/json",
       },
       data: JSON.stringify({
         inputs: `tiny, extremely detailed, minimalistic, black tattoo stencil of ${prompt} on paper, centered`,
         options: { wait_for_model: true },
       }),
       responseType: "arraybuffer",
     });
     const type = response.headers["content-type"];
     const data = response.data;

     const base64data = Buffer.from(data).toString("base64");
     const img = `data:${type};base64,` + base64data; // <-- This is so we can render it on the page
     setImage(img);
     setLoading(false);
     success();
     return data;
   };


  const submitHandler = async (e: { preventDefault: () => void }) => {
    e.preventDefault();
    info();
    // call api to generate image based on prompt
    const imageData = await createImage();
  };
  return (
    <div>
      <Head>
        <title>Tattoo inspiration</title>
        <meta name="description" content="Generated by shadow" />
      </Head>
      <div className="flex flex-col-reverse items-center justify-center p-6">
        <div className="flex items-center justify-center w-full ">
          <form className="flex flex-col w-full" onSubmit={submitHandler}>
            {/* <label htmlFor="name">Name</label>
              <input
                type="text"
                name="name"
                id="name"
                placeholder='e.g. "Erik"'
                className="input w-full input-bordered bg-base-200"
                onChange={(e) => {
                  setName(e.target.value);
                }}
              /> */}
            <label htmlFor="prompt">Describe your dream tattoo</label>
            <input
              type="text"
              name="prompt"
              id="prompt"
              placeholder='e.g. "a dragon'
              className="input w-full input-bordered bg-base-200"
              onChange={(e) => {
                setPrompt(e.target.value);
              }}
            />
            <button type="submit" className="btn btn-primary mt-3">
              Generate
            </button>
          </form>
        </div>
        <div className="border w-80 h-80 rounded-lg shadow flex items-center justify-center">
          {loading ? (
            <div className="w-80 h-80 flex items-center justify-center rounded-lg">
              <Skeleton width={325} height={325} />
            </div>
          ) : (
            <Image
              src={image}
              width={400}
              height={300}
              alt="tattoo"
              className="rounded-lg "
            />
          )}
        </div>
        <div>{/* <Stable /> */}</div>
      </div>
      <ToastContainer
        theme="colored"
        position="bottom-right"
        // style={{ width: "300px" }}
      />
    </div>
  );
}

export default StableAxios